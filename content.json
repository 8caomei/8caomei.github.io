{"meta":{"title":"草莓的博客","subtitle":null,"description":"天若有情天亦老，我为长者续一秒。","author":"草莓丶","url":"http://www.kongdewei.cn"},"pages":[{"title":"分类","date":"2016-09-23T03:42:33.000Z","updated":"2016-09-23T03:43:46.000Z","comments":false,"path":"categories/index.html","permalink":"http://www.kongdewei.cn/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2016-09-23T03:49:32.000Z","updated":"2016-09-23T06:30:20.000Z","comments":false,"path":"tags/index.html","permalink":"http://www.kongdewei.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"DDCTF安卓题-writeup","slug":"DDCTF安卓题-writeup","date":"2017-06-30T06:00:11.000Z","updated":"2017-06-30T07:22:12.000Z","comments":true,"path":"2017/06/30/DDCTF安卓题-writeup/","link":"","permalink":"http://www.kongdewei.cn/2017/06/30/DDCTF安卓题-writeup/","excerpt":"0x01 引子总觉得自己写东西能力太差，还是要练练的，所以就决定开始写点东西，前段做了一个滴滴CTF的其中一道安卓题目，题目并不难，主要分享一下做题过程和思路。","text":"0x01 引子总觉得自己写东西能力太差，还是要练练的，所以就决定开始写点东西，前段做了一个滴滴CTF的其中一道安卓题目，题目并不难，主要分享一下做题过程和思路。 0x02 要求与提示赛题背景：本挑战结合了Android, Java, C/C++，加密算法等知识点，考察了挑战者的binary逆向技术和加密算法能力。 赛题描述：本题是一个app，请试分析app中隐藏的key，逆向加密算法并得到对应的秘钥。可以在app中尝试输入key，如果正确会显示“correct”，如果错误会显示“Wrong”。提 示：阅读assembly code，理解xor的加密逻辑和参数，解出答案。评分标准：key正确则可进入下一题。 Flag格式为DDCTF-XXXXXXXXXXXX@didichuxing.com 还是很好辨认的 0x03 分析与过程 直接点击下方的TEST按钮显示Wrong上apkkiller找到关键位置，进行关键词搜索（搜Wrong）。 反编译源码（appkiller上点击java图标） 这里直接贴上来代码123456789101112131415161718192021222324252627282930313233public class MainActivity extends AppCompatActivity&#123; private TextView mFlagEntryView; private TextView mFlagResultView; static &#123; System.loadLibrary(\"hello-libs\"); &#125; public void onClickTest(View paramView) &#123; if (this.mFlagEntryView.getText().toString().equals(stringFromJNI())) &#123; this.mFlagResultView.setText(\"Correct\"); &#125; for (;;) &#123; return; this.mFlagResultView.setText(\"Wrong\"); &#125; &#125; protected void onCreate(Bundle paramBundle) &#123; super.onCreate(paramBundle); setContentView(2130968602); this.mFlagEntryView = ((TextView)findViewById(2131427413)); this.mFlagResultView = ((TextView)findViewById(2131427415)); &#125; public native String stringFromJNI();&#125; 其中onClickTest响应TEST按钮点击 this.mFlagEntryView.getText().toString().equals(stringFromJNI()) 从mFlagEntryView得到view控件内容，tostring转string型，使用equals对比stringFromJNI()返回值。 一般我们应该跟踪stringFromJNI()函数看他返回了什么值，接下来查找该函数的来源 static { System.loadLibrary(“hello-libs”); } 加载了so模块hello-libs 这个时候分析so文件获取flag就行了。 这里很简单并没有加什么混淆，直接写在so文件中，到这里就算完成这题。 0x04 另一种思路如果这个题目的so中是经过运算加密返回的，并无法直接静态看到flag那该怎么办。 this.mFlagEntryView.getText().toString().equals(stringFromJNI()) 前面我们分析过这个位置，因为使用equals进行字符串对比。看下equals的java解释 Equals之前使用了tostring，所以如果mFlagEntryView的内容与stringFromJNI返回值相同才会出现true的情况，那么也就是说stringFromJNI是把flag返回到程序领空的，我们直接修改smil代码把flag显示在mFlagResultView中。 直接获取stringFromJNI返回值然后赋值给mFlagResultView，再安装运行即可。","categories":[{"name":"移动安全android","slug":"移动安全android","permalink":"http://www.kongdewei.cn/categories/移动安全android/"}],"tags":[{"name":"DDCTF安卓题-writeup","slug":"DDCTF安卓题-writeup","permalink":"http://www.kongdewei.cn/tags/DDCTF安卓题-writeup/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-09-23T06:23:59.000Z","updated":"2017-06-30T13:55:06.671Z","comments":true,"path":"2016/09/23/hello-world/","link":"","permalink":"http://www.kongdewei.cn/2016/09/23/hello-world/","excerpt":"0Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"0Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"test","slug":"test","permalink":"http://www.kongdewei.cn/categories/test/"}],"tags":[{"name":"你好世界","slug":"你好世界","permalink":"http://www.kongdewei.cn/tags/你好世界/"}]}]}